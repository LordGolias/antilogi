author="LordGolias";
OnLoadName = "antilogi";
OnLoadMission = "Anti logistics - disrupt the enemy";
loadScreen = "flag.jpg";

overviewText = "Details at <a href='https://github.com/LordGolias/antilogi'>Github</a>";
overviewPicture = "flag.jpg";

allowFunctionsLog = 1;
enableDebugConsole = 1;

respawn = "BASE";
respawnDelay = 10;
respawnVehicleDelay = 120;
respawnDialog = 1;
respawnOnStart = -1; // never run onPlayerRespawn. initialization/client.sqf handles this.
aiKills = 0;
disabledAI=1;
Saving = 1;
showCompass=1;
showRadio=1;
showGPS=1;
showMap=1;
showBinocular=1;
showNotepad=1;
showWatch=1;
debriefing=1;

class CfgTaskEnhancements {
    enable       = 1;            //0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
    3d           = 1;            //0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
    3dDrawDist   = 3500;        //3d marker draw distance (default: 2000)
    share        = 1;            //0: do not count assigned players (default), 1: count how many players have the task assigned
    propagate    = 1;            //0: do not propagate (default), 1: propagate shared tasks to subordinates
};

class Header {
    gameType = COOP;
    minplayers=1;
    maxplayers=50;
};

class CfgDebriefing {
    class End1 {
        title = "V I C T O R Y";
        subtitle = "The island is ours!";
        description = "The population loves you!<br/>The FIA brave soldiers proved their valour. A deserved rest in a Greek island, drinking with Petros.";
        picture = "n_inf";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    class invalidConfiguration {
        title = "You do not have the same mods as the server";
        subtitle = "";
        description = "Server maybe using ACE/RHS/CUP and you not or vice-versa. Clients must use the same server mods as the server.";
        picture = "b_unknown";
    };
};

class cfgRemoteExec {
    class Functions {
        mode = 2;
        jip = 0;
    };
};

class cfgFunctions {
    #include "cfgFunctions.hpp"
};
